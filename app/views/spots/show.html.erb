

<% if @spot.photo_url.attached? %>
  <div class ="fond" style="background-image: url('<%= cl_image_path @spot.photo_url.key %>');"></div>
<% end %>

<%= link_to spots_path do %>
  <div class="round-button">
    <div class="circle-back">
    </div>
    <svg width="10" height="17" viewBox="0 0 10 17" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9 16L1 8.5L9 1" stroke="#4F3A57" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </div>
<% end %>


<div id="habillage1">
  <section class="flex-profile">
    <h1 style="margin: 1.5rem auto; font-weight: 700;"><%= @spot.address %></h1>
      <div class="choices">
        <div class="square-button">
          <% if @bookmark.first %>
            <%= link_to '<i class="fa-solid fa-bookmark" style="color: #5B5071"></i>'.html_safe, spot_bookmark_path(@spot.id), data: {turbo_method: :delete} %>
          <% else @bookmark == nil %>
            <%= link_to '<i class="fa-regular fa-bookmark" style="color: #5B5071"></i>'.html_safe, spot_bookmarks_path(@spot.id), data: {turbo_method: :post} %>
          <% end %>
        </div>

        <%= link_to spots_path do %>
          <div class="square-button">
            <svg width="19" height="19" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15.0192 7.73776C15.0192 6.78154 14.8309 5.83469 14.4649 4.95126C14.099 4.06784 13.5627 3.26513 12.8865 2.58899C12.2104 1.91284 11.4077 1.37649 10.5243 1.01057C9.64082 0.644639 8.69397 0.456299 7.73776 0.456299C5.80659 0.456299 3.95453 1.22345 2.58899 2.58899C1.22345 3.95453 0.456299 5.80659 0.456299 7.73776C0.456299 9.66892 1.22345 11.521 2.58899 12.8865C3.95453 14.2521 5.80659 15.0192 7.73776 15.0192C9.66892 15.0192 11.521 14.2521 12.8865 12.8865C14.2521 11.521 15.0192 9.66892 15.0192 7.73776ZM13.512 7.00961H11.3785C11.2584 5.29712 10.6717 3.6502 9.68191 2.24754C10.6987 2.60867 11.5953 3.24515 12.2715 4.08599C12.9478 4.92683 13.3773 5.93899 13.512 7.00961ZM5.61157 8.4659H9.92219C9.73585 10.2648 8.96909 11.9543 7.73776 13.2789C6.50724 11.9598 5.75807 10.2639 5.61157 8.4659ZM5.61157 7.00961C5.78115 5.2197 6.52728 3.53324 7.73776 2.20385C8.97904 3.51897 9.74753 5.20966 9.92219 7.00961H5.61157ZM5.8737 2.22569C4.87873 3.63613 4.28256 5.2888 4.148 7.00961H1.96356C2.10111 5.92577 2.54069 4.90245 3.23211 4.05652C3.92353 3.2106 4.83891 2.57617 5.8737 2.22569ZM1.96356 8.4659H4.148C4.26792 10.1852 4.86004 11.8381 5.85914 13.2425C4.82807 12.8903 3.91644 12.256 3.22782 11.4117C2.5392 10.5673 2.10119 9.54674 1.96356 8.4659ZM9.6455 13.2353C10.6419 11.8304 11.2406 10.1827 11.3785 8.4659H13.5265C13.3888 9.54374 12.9524 10.5616 12.2666 11.4044C11.5807 12.2472 10.6728 12.8814 9.6455 13.2353Z" fill="url(#paint0_radial_362_44)"/>
              <defs>
                <radialGradient id="paint0_radial_362_44" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.4987 32.161) rotate(-105.479) scale(41.7126 94.5297)">
                  <stop stop-color="#7077A0"/>
                  <stop offset="1" stop-color="#4F3A57"/>
                </radialGradient>
              </defs>
            </svg>
          </div>
        <% end %>

        <%= link_to "https://www.google.com/maps/dir//#{@spot.address}", target:"_blank" do %>
          <div class="square-button">
            <svg width="18" height="17" viewBox="0 0 18 17"   fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M11.4411 16.9987H11.3862C11.1848 16.9862 10.9931 16.9055 10.8408 16.769C10.6885 16.6326 10.5843 16.4481 10.5443 16.2443L9.135 9.10558C9.09914 8.92435 9.01235 8.75799 8.88543 8.62721C8.75851 8.49642 8.59707 8.40698 8.42121 8.37002L1.4937 6.91776C1.29554 6.8772 1.11598 6.77022 0.983012 6.61349C0.850042 6.45676 0.771137 6.2591 0.7586 6.05132C0.746064 5.84354 0.8006 5.63732 0.913706 5.46483C1.02681 5.29233 1.19213 5.16325 1.38388 5.09772L16.0259 0.0713823C16.1903 0.00145026 16.3708 -0.017626 16.5455 0.0164856C16.7202 0.0505972 16.8815 0.136419 17.0097 0.26346C17.1378 0.390502 17.2272 0.55326 17.2671 0.731841C17.3069 0.910421 17.2953 1.09709 17.2339 1.26903L12.3563 16.3575C12.2926 16.5526 12.1687 16.721 12.0034 16.8368C11.8382 16.9526 11.6407 17.0095 11.4411 16.9987Z" fill="url(#paint0_radial_362_55)"/>
              <defs>
                <radialGradient id="paint0_radial_362_55" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(14.4287 37.0104) rotate(-105.073) scale(48.5992 107.528)">
                  <stop stop-color="#7077A0"/>
                  <stop offset="1" stop-color="#4F3A57"/>
                </radialGradient>
              </defs>
            </svg>
          </div>
        <% end %>
      </div>

      <%= link_to 'itinéraire (pas fait)', spots_path, style: "display: none;" %>

    <div id="reviews-average" data-average-review="<%= @average_rating %>">
      <% for num in (1..5) %>
        <i class="fa-<%= (num > @average_rating) ? 'regular' : 'solid' %> fa-star"></i>
      <% end %>
    </div>

    <% if @spot.reviews.find_by(user_id: current_user) == nil %>
      <div class="review">
        <h2>laisse une évaluation</h2>
        <%= simple_form_for [@spot, @review] do |f| %>
          <%= f.input :rating, as: :hidden %>
          <div class="my-3" id="review-star-ratings">
            <% Review::AUTHORIZED_RATINGS.each do |index| %>
              <i id="<%= index %>" class="review-rating fa-regular fa-star"></i>
            <% end %>
          </div>
          <%= f.submit class: "btn btn-primary", value: "Valider", id:"submit-star" %>
        <% end %>
      </div>
    <% end %>

    <h2 style="margin: 2vh 0; color: #452E4F;"><%= @spot.spot_difficulty %></h2>


    <ul style="padding-left: 0; filter: drop-shadow(0px 8px 20px rgba(10, 27, 70, 0.2));">
      <div style="gap: 36px;
                  display: inline-flex;
                  flex-wrap: wrap;
                  justify-content: space-between;">
        <% @spot.moves.each do |move| %>
          <li class="move-bouton">
            <p style="width: 12ch; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"><%= link_to move.name, move_path(move) %></p>
              <svg width="18" height="16" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M16 8H1M11 1L17 8L11 15" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
          </li>
        <% end %>
      </div>
    </ul>

  <div id="map3" data-markers=<%= @markers.to_json %> style="width:100%; height:350px"></div>

  </section>
</div>

<script>
// ------------------------------------------- MAP ------------------------------------------

// je créé la carte
var map3 = document.querySelector("#map3")
mapboxgl.accessToken = 'pk.eyJ1IjoiY2hvc3VrZSIsImEiOiJjbGFiMnhtbnowZTE3M3BsZjJjMnFsaWcxIn0.v30HKeYX-ohBi1jLJYJYew';
var map = new mapboxgl.Map({
  container: 'map3',
style: 'mapbox://styles/mapbox/satellite-streets-v12',
zoom: 18
});

// j'ajoute les markers

var markers3 = JSON.parse(map3.dataset.markers)
console.log(markers3);
markers3.forEach(marker => {
  const customMarker3 = document.createElement("div")
  customMarker3.className = "marker3"
  customMarker3.style.backgroundImage = `url('https://res.cloudinary.com/dxx5x9kzp/image/upload/v1669905490/Groupmarker_eai2sh.png')`
  customMarker3.style.backgroundSize = "contain"
  customMarker3.style.width = "34px"
  customMarker3.style.height = "45px"

  var addedMarker3 = new mapboxgl.Marker(customMarker3)
    .setLngLat([marker.lng, marker.lat])
    .addTo(map);

  customMarker3.markerInstance = addedMarker3

// je centre la map par rapport aux markers
    const bounds = new mapboxgl.LngLatBounds()
    markers3.forEach(marker => bounds.extend([ marker.lng, marker.lat ]))
    map.fitBounds(bounds, { padding: 50, maxZoom: 20, duration: 0 })
});


// ------------------------------ Evaluation --------------------------------------------

  // je créé une fonction qui va changer la classe appliquée aux étoiles
  var toggleColorStars = (stars, rating) => {
    stars.forEach((star) => {
      if (star.id <= rating) {
        star.className = "review-rating fa-solid fa-star"
      } else {
        star.className = "review-rating fa-regular fa-star"
      }
    });
  };

  // je créé une fonction qui va récupérer la valeur du rating
  var updateRatingInputForm = (rating) => {
    const formInput = document.getElementById('review_rating')
    formInput.value = rating
  }

  // je créé une fonction qui va appeler les deux premières fonctions
  var dynamicRating = () => {
    // je récupère toutes les étoiles
    const stars = document.querySelectorAll('.review-rating');
    const starsReview = document.querySelector('#review-star-ratings');


    if ( stars.length > 0) {
      stars.forEach((star) => {
        // au clic je récupère la valeur du rating, j'applique le style css et j'ajoute une classe "selected" sur l'étoile
        star.addEventListener("click", (event) => {
          const rating = event.currentTarget.id
          updateRatingInputForm(rating);
          toggleColorStars(stars, rating);
          star.classList.add("selected")
        });
        star.addEventListener("mouseover", (event) => {
          // s'il n'y a pas de classe "selected" j'applique du style au passage de la souris
          const rating = event.currentTarget.id
          if (!(document.querySelector(".selected"))) {
            toggleColorStars(stars, rating);
          }
        });
      });
      starsReview.addEventListener("mouseout", (event) => {
        if (!(document.querySelector(".selected"))) {
          stars.forEach((star) => {
            star.className = "review-rating fa-regular fa-star"
          });
        }
      });
    };
  };
  var average = document.querySelector("#reviews-average")
  var button = document.querySelector("#submit-star")
  button.addEventListener( "click", (event) => {
    console.log(average.dataset.averageReview);
    average.innerHTML = `<p>Moyenne: ${average.dataset.averageReview}</p>`
  })
  // export { dynamicRating };
  dynamicRating();
</script>
